==[Testing Point4D Class]===========================================
Declared Points
7Point4DIiE setInt1(1, 2, 3, 4)
7Point4DIiE setInt2(5, 6, 7, 8)
7Point4DIiE setIntLimit(2.14748e+09, 2.14748e+09, 2.14748e+09, 2147483647)
7Point4DIfE setFloat1(10.87, 20.65, 30.43, 40.21)
7Point4DIfE setFloat2(5.21, 6.43, 7.65, 8.87)
7Point4DIdE setDouble1(1.21, 2.43, 3.65, 4.87)
7Point4DIdE setDouble2(5.87, 6.65, 7.43, 8.21)
7Point4DIdE setZero(0, 0, 0, 0)

Testing Operator Methods
+ operator method: (setInt1 + setInt2) = (6, 8, 10, 12)
+ operator method: (setInt1 + 5) = (6, 7, 8, 9)
- operator method: (setFloat1 - setFloat2) = (5.66, 14.22, 22.78, 31.34)
- operator method: (setFloat1 - 5.0F) = (5.87, 15.65, 25.43, 35.21)
* operator method: (setDouble1 * setDouble2) = (7.1027, 16.1595, 27.1195, 39.9827)
* operator method: (setDouble1 * 5.0) = (6.05, 12.15, 18.25, 24.35)
/ operator method: (setDouble1 / setDouble2) = (0.206133, 0.365414, 0.491252, 0.593179)
/ operator method: (setDouble1 / 5.0) = (0.242, 0.486, 0.73, 0.974)
Combining operator methods: ((((setDouble1 + setDouble2) - 5.0) * setDouble1) / 10.0) = (0.25168, 0.99144, 2.2192, 3.93496)

Testing Exceptions
Dividing by zero: (setDouble1 / setZero) = Math error: Attempted to divide by Zero
Overflowing a data type: (setInt1 * setIntLimit) = Math error: Stack overflow

==[Testing PointND Class]===========================================
Declared Points
7PointNDIiE setInt3(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
7PointNDIiE setInt4(7, 8, 9, 10, 11, 12, 13, 14, 15, 16)
7PointNDIiE setIntLimit2(2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647)
7PointNDIfE setFloat3(10.87, 20.65, 30.43, 40.21, 50.01, 60.11, 70.21, 80.31, 90.41, 100.51)
7PointNDIfE setFloat4(5.21, 6.43, 7.65, 8.87, 9.99, 10.11, 11.23, 12.35, 13.47, 14.59)
7PointNDIdE setDouble3(1.21, 2.43, 3.65, 4.87, 5.99, 6.11, 7.23, 8.35, 9.47, 10.59)
7PointNDIdE setDouble4(5.87, 6.65, 7.43, 8.21, 9.01, 10.11, 11.21, 12.31, 13.41, 14.51)
7PointNDIdE setZero2(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
7PointNDIiE pt1(58, 13)
7PointNDIiE pt2(9, 60)

Testing Operator Methods
+ operator method: (setInt3 + setInt4) = (8, 10, 12, 14, 16, 18, 20, 22, 24, 26)
+ operator method: (setInt3 + 5) = (6, 7, 8, 9, 10, 11, 12, 13, 14, 15)
- operator method: (setFloat3 - setFloat4) = (5.66, 14.22, 22.78, 31.34, 40.02, 50, 58.98, 67.96, 76.94, 85.92)
- operator method: (setFloat3 - 5.0F) = (5.87, 15.65, 25.43, 35.21, 45.01, 55.11, 65.21, 75.31, 85.41, 95.51)
* operator method: (setDouble3 * setDouble4) = (7.1027, 16.1595, 27.1195, 39.9827, 53.9699, 61.7721, 81.0483, 102.788, 126.993, 153.661)
* operator method: (setDouble3 * 5.0) = (6.05, 12.15, 18.25, 24.35, 29.95, 30.55, 36.15, 41.75, 47.35, 52.95)
/ operator method: (setDouble3 / setDouble4) = (0.206133, 0.365414, 0.491252, 0.593179, 0.664817, 0.604352, 0.64496, 0.67831, 0.706189, 0.729841)
/ operator method: (setDouble3 / 5.0) = (0.242, 0.486, 0.73, 0.974, 1.198, 1.222, 1.446, 1.67, 1.894, 2.118)
Combining operator methods: ((((setDouble3 + setDouble4) - 5.0) * setDouble3) / 10.0) = (0.25168, 0.99144, 2.2192, 3.93496, 5.99, 6.85542, 9.71712, 13.0761, 16.9324, 21.2859)

Testing Exceptions
Dividing by zero: (setDouble3 / setZero2) = Math error: Attempted to divide by Zero
Overflowing a data type: (setInt3 * setIntLimit2) = Math error: Stack overflow

Testing Whether The Point Lies In The First Quadrant Or Not (XLIMIT = 500, YLIMIT = 500)
(pt1 + pt2) = Point is in the first quadrant
(pt1 - pt2) = Quadrant error: Point is not in the first quadrant and/or in the specified limit
(pt1 * pt2) = Quadrant error: Point is not in the first quadrant and/or in the specified limit
